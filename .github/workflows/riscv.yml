name: riscv-toolchain

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - MARCH: "rv32i"
          MABI: "ilp32"
          TARGET: "riscv32-unknown-elf"
        - MARCH: "rv64gc"
          MABI: "lp64d"
          TARGET: "riscv64-unknown-elf"

    steps:
    - name: Install build dependencies
      run: sudo apt-get install autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev

    - name: Checkout riscv-gcc
      uses: actions/checkout@v2
      with:
        repository: riscv/riscv-gcc
        path: riscv-gcc
      
    - name: Checkout riscv-binutils
      uses: actions/checkout@v2
      with:
        repository: riscv/riscv-binutils-gdb
        path: riscv-binutils-gdb
        
        
    - name: Setting up build environment
      run: |
        echo "MARCH=${{ matrix.MARCH }}" >> $GITHUB_ENV
        echo "MABI=${{ matrix.MABI }}" >> $GITHUB_ENV
        echo "TARGET=${{ matrix.TARGET }}" >> $GITHUB_ENV
        echo "PREFIX=/opt/riscv/${{ matrix.MARCH }}" >> $GITHUB_ENV
        echo "$PREFIX/bin" >> $GITHUB_PATH
      
    - name: Show build environment
      run: |
        echo TARGET: $TARGET
        echo PREFIX: $PREFIX
        echo PATH: $PATH
        echo "------ gcc version ------"
        gcc -v
        
    - name: Configure binutils
      run: |
        mkdir build-binutils
        cd build-binutils
        
        ../riscv-binutils-gdb/configure \
          --prefix="$PREFIX" \
          --host="x86_64-linux-gnu" \
          --target="$TARGET" \
          --with-sysroot \
          --without-headers \
          --disable-werror \
          --disable-shared \
          --disable-threads \
          --disable-plugin \
          --disable-tls \
          --disable-decimal-float \
          --disable-libatomic \
          --disable-libmudflap \
          --disable-libssp \
          --disable-libgomp \
          --disable-nls \
          --disable-tm-clone-registry \
          --disable-libitm --disable-libsanitizer \
          --disable-libquadmath --disable-libquadmath-support \
          --disable-multilib \
          --enable-multiarch \
          --with-arch=$MARCH --with-abi=$MABI \
          --program-prefix=${TARGET}-
      
    - name: Compile binutils
      working-directory: build-binutils
      run: make -j4
      
    - name: Install binutils
      working-directory: build-binutils
      run: make install
      
    - name: Configure gcc
      run: |
        mkdir build-gcc
        cd build-gcc
        
        ../riscv-gcc/configure \
          --prefix=$PREFIX \
          --host=x86_64-linux-gnu \
          --target=$TARGET \
          --enable-languages=c \
          --without-headers \
          --disable-werror \
          --disable-shared \
          --disable-threads \
          --disable-plugin \
          --disable-tls \
          --disable-decimal-float \
          --disable-libatomic \
          --disable-libmudflap \
          --disable-libssp \
          --disable-libgomp \
          --disable-nls \
          --disable-tm-clone-registry \
          --disable-libitm --disable-libsanitizer \
          --disable-libquadmath --disable-libquadmath-support \
          --disable-multilib \
          --enable-multiarch \
          --with-arch=$MARCH --with-abi=$MABI \
          --program-prefix=${TARGET}-
      
    - name: Compile gcc
      working-directory: build-gcc
      run: make -j4
      
    - name: Install gcc
      working-directory: build-gcc
      run: make install
      
    - name: Generate prebuilt binary tarball
      run: |
        tar -C $PREFIX/.. -cvJf $MARCH-$MABI.tar.xz ${PREFIX##*/}
      
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.MARCH }}-${{ env.MABI }}
        path: ${{ env.MARCH }}-${{ env.MABI }}*.tar.xz

  release:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: rv32i-ilp32
    - uses: actions/download-artifact@v2
      with:
        name: rv64gc-lp64d
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: rv32i-ilp32.tar.xz
        asset_name: rv32i-ilp32.tar.xz
        asset_content_type: application/x-compressed
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: rv64gc-lp64d.tar.xz
        asset_name: rv64gc-lp64d.tar.xz
        asset_content_type: application/x-compressed
